syntax = "proto3";
package sequencer;
import "bignum.proto";
import "order.proto";
import "market.proto";
import "balance.proto";
import "checkpoint.proto";
import "trade.proto";

option java_multiple_files = true;
option java_package = "co.chainring.sequencer.proto";
option java_outer_classname = "SequencerSchema";

message OrderChanged {
  uint64 guid = 1;
  OrderDisposition disposition = 2;
  optional IntegerValue newQuantity = 3;
}

message OrderChangeRejected {
  enum Reason {
    None = 0;
    DoesNotExist = 1;
    NotForWallet = 2;
  }
  uint64 guid = 1;
  Reason reason = 2;
}

message BalanceChange {
  uint64 wallet = 1;
  string asset = 2;
  IntegerValue delta = 3;
}

message MarketCreated {
  string marketId = 1;
  DecimalValue tickSize = 2;
}

message FeeRates {
  uint64 maker = 1;
  uint64 taker = 2;
}

message SequencerRequest {
  enum Type {
    AddMarket = 0;
    ApplyOrderBatch = 1;
    ApplyBalanceBatch = 2;
    Reset = 3;
    GetState = 4;
    SetFeeRates = 5;
  }
  string guid = 1;
  Type type = 2;
  optional Market addMarket = 3;
  optional OrderBatch orderBatch = 4;
  optional BalanceBatch balanceBatch = 5;
  optional FeeRates feeRates = 6;
}

enum SequencerError {
  None = 0;
  UnknownRequest = 1;
  MarketExists = 2;
  UnknownMarket = 3;
  ExceedsLimit = 4;
  InvalidFeeRate = 5;
}

message StateDump {
  repeated BalancesCheckpoint.Balance balances = 1;
  repeated MarketCheckpoint markets = 2;
  FeeRates feeRates = 3;
}

message SequencerResponse {
  uint64 sequence = 1;
  string guid = 2;
  uint64 processingTime = 3;
  optional SequencerError error = 4;
  repeated OrderChanged ordersChanged = 5;
  repeated TradeCreated tradesCreated = 6;
  repeated BalanceChange balancesChanged = 7;
  repeated MarketCreated marketsCreated = 8;
  repeated OrderChangeRejected ordersChangeRejected = 9;
  optional StateDump stateDump = 10;
  optional FeeRates feeRatesSet = 11;
}

message Sequenced {
  string guid = 1;
  uint64 index = 2;
}
