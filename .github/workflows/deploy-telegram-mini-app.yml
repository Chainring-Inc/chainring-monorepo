name: Deploy Telegram Mini App

on:
  # Manual trigger from the UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options: [ 'test', 'testnet', 'demo', 'prod' ]

  # Call from another workflow (CI)
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

# only one running deploy job per environment
concurrency:
  group: telegram-mini-app-${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  deploy_telegram_mini_app:
    name: Deploy Telegram Mini App
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      # needed for aws credentials
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node-js-20
      - name: Install dependencies
        working-directory: ./telegram-mini-app
        run: pnpm install
      - name: Lint
        working-directory: ./telegram-mini-app
        run: pnpm run lint
      - name: Typecheck
        working-directory: ./telegram-mini-app
        run: pnpm run typecheck
      - name: build
        working-directory: ./telegram-mini-app
        run: pnpm run build --mode ${{ inputs.environment }}
      - name: Setup AWS
        uses: ./.github/actions/setup-aws
      - name: Deploy to ${{ inputs.environment }} environment
        working-directory: ./telegram-mini-app
        run: aws s3 sync dist/ s3://${{ inputs.environment }}-funkybit-telegram-mini-app/
      - name: Install jq
        uses: dcarbone/install-jq-action@v2
      - name: invalidate cloudfront cache
        shell: bash
        run: |
          aws cloudfront list-distributions --query DistributionList.Items[].ARN | jq -c -r '.[]' | while IFS= read -r arn; do
            if [[ $(aws cloudfront list-tags-for-resource --resource $arn | jq -c -r '.Tags.Items[] | select(.Key == "app_and_env") | .Value') == "${{ inputs.environment }}-telegram-mini-app" ]]; then
              aws cloudfront create-invalidation --distribution-id $(echo $arn | sed 's/.*\///') --paths "/*";
            fi
          done
